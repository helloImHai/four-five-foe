{"version":3,"sources":["components/Node.js","contexts/SocketProvider.js","contexts/PlayerProvider.js","components/PlayerBar.js","components/HomeButton.js","components/LoadingScreen.js","components/CustomDialogue.js","components/GameGrid.js","components/Instructions.js","container/Game.js","container/Home.js","container/Lobby.js","contexts/CustomThemeProvider.js","components/DarkThemeSwitch.js","App.js","index.js"],"names":["PLAYER","0","1","useStyles","makeStyles","palette","unpicked","borderRadius","color","background","default","picked","text","primary","winningCell","backgroundColor","success","light","lastMove","Node","props","classes","col","row","player","clicked","isDisabled","isWinningCell","isLastMove","cellType","IconButton","onClick","disabled","className","style","width","SocketContext","React","createContext","OpenNewSocketContext","useSocket","useContext","SocketProvider","children","useState","socket","setSocket","initialiseSocket","newSocket","openSocket","transports","useEffect","disconnect","Provider","value","PlayerContext","PlayerUpdateContext","usePlayerState","usePlayerStateUpdate","PlayerProvider","name","gameId","playerId","playerNumber","opponentDisconnected","playerState","setPlayerState","height","paddingTop","current","main","PlayerBar","players","currentPlayer","hero","heroName","handleName","villainName","Object","keys","filter","reduce","x","y","heroClass","villainClass","isHeroTurn","length","substring","Grid","container","direction","justify","alignItems","item","xs","sm","Paper","elevation","Typography","variant","Box","m","HomeButton","history","useHistory","Button","push","LoadingScreen","display","flexDirection","justifyContent","CircularProgress","MODAL_STATE","intro","title","message","closingText","joinFail","anotherPlayerDisconnect","win","lose","DialogTitle","withStyles","theme","root","margin","padding","spacing","closeButton","position","right","top","grey","onClose","other","disableTypography","aria-label","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","CustomDialogue","isOpen","setIsOpen","type","handleClose","Dialog","aria-labelledby","open","id","dividers","gutterBottom","autoFocus","gamegrid","overflowX","maxHeight","border","borderColor","secondary","borderStyle","table","tableBody","cell","GameGrid","gameState","setGameState","didWin","setDidWin","didLose","setDidLose","gameGrid","isGameOver","renderCount","useRef","handleCellClick","count","nextGameGrid","nextPlayer","emit","on","payload","p","off","Container","maxWidth","Table","TableBody","map","rowIndex","TableRow","node","colIndex","TableCell","minWidth","align","size","BootstrapButton","fontSize","lineHeight","boxShadow","Instructions","indexContainer","marginLeft","textAlign","Game","game","Home","isJoinFail","setIsJoinFail","isIntroOpen","setIsIntroOpen","hasSetName","NameScreen","GameOptions","gameTypePaper","minHeight","action","hover","gameIdRef","fullWidth","TextField","inputRef","label","marginRight","nameRef","Edit","alert","TEXT","waiting","details","ready","Prompt","state","Lobby","isReady","setIsReady","setPlayers","oldPlayers","CustomThemeContext","CustomThemeUpdateContext","CustomThemeProvider","isDark","setDarkMode","createMuiTheme","ThemeProvider","DarkThemeSwitch","isDarkMode","modeLabel","paddingBottom","FormControlLabel","labelPlacement","control","Switch","checked","onChange","useStyle","App","bgcolor","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ae2f783d.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nconst PLAYER = { 0: \"x\", \"-1\": \"_\", 1: \"o\" };\n\nconst useStyles = makeStyles(({ palette }) => ({\n  unpicked: {\n    borderRadius: \"0px\",\n    color: palette.background.default,\n    \"&:disabled\": {\n      color: palette.background.default,\n    },\n    \"&:hover\": {\n      color: \"rgb(0,0,0,0)\",\n    },\n  },\n  picked: {\n    borderRadius: \"0px\",\n    \"&:disabled\": {\n      color: palette.text.primary,\n    },\n  },\n  winningCell: {\n    borderRadius: \"0px\",\n    \"&:disabled\": {\n      backgroundColor: palette.success.light,\n      color: palette.text.primary,\n    },\n  },\n  lastMove: {\n    borderRadius: \"0px\",\n    \"&:disabled\": {\n      backgroundColor: \"#ffb6c1\",\n      color: palette.text.primary,\n    },\n  },\n}));\n\nexport default function Node(props) {\n  const classes = useStyles();\n  const {\n    col,\n    row,\n    player,\n    clicked,\n    isDisabled,\n    isWinningCell,\n    isLastMove,\n  } = props;\n  const cellType = isWinningCell\n    ? classes.winningCell\n    : isLastMove\n    ? classes.lastMove\n    : player === -1\n    ? classes.unpicked\n    : classes.picked;\n  return (\n    <IconButton\n      onClick={() => clicked(row, col)}\n      disabled={isDisabled}\n      className={cellType}\n      style={{ width: \"100%\" }}\n    >\n      {PLAYER[player]}\n    </IconButton>\n  );\n}\n","import React, { useContext, useState, useEffect } from \"react\";\nimport openSocket from \"socket.io-client\";\n\nconst serverUrl = \"https://backboardd.herokuapp.com/\";\n\nconst SocketContext = React.createContext();\nconst OpenNewSocketContext = React.createContext();\n\nexport function useSocket() {\n  return useContext(SocketContext);\n}\n\nexport function useNewSocket() {\n  return useContext(OpenNewSocketContext);\n}\n\nexport function SocketProvider({ children }) {\n  const [socket, setSocket] = useState();\n  function initialiseSocket() {\n    const newSocket = openSocket(serverUrl, {\n      transports: [\"websocket\"],\n    });\n    setSocket(newSocket);\n    return newSocket;\n  }\n  useEffect(() => {\n    const newSocket = initialiseSocket();\n    if (newSocket == null) {\n      return;\n    }\n    return () => newSocket.disconnect();\n  }, []);\n\n  return (\n    <SocketContext.Provider value={socket}>\n      <OpenNewSocketContext.Provider value={initialiseSocket}>\n        {children}\n      </OpenNewSocketContext.Provider>\n    </SocketContext.Provider>\n  );\n}\n","import React, { useContext, useState } from \"react\";\n\nconst PlayerContext = React.createContext();\nconst PlayerUpdateContext = React.createContext();\n\nexport function usePlayerState() {\n  return useContext(PlayerContext);\n}\n\nexport function usePlayerStateUpdate() {\n  return useContext(PlayerUpdateContext);\n}\n\nexport function PlayerProvider({ children }) {\n  const [playerState, setPlayerState] = useState({\n    name: \"\",\n    gameId: \"\",\n    playerId: \"\",\n    playerNumber: -1,\n    opponentDisconnected: false,\n  });\n\n  return (\n    <PlayerContext.Provider value={playerState}>\n      <PlayerUpdateContext.Provider value={setPlayerState}>\n        {children}\n      </PlayerUpdateContext.Provider>\n    </PlayerContext.Provider>\n  );\n}\n","import React from \"react\";\nimport { Box, Paper, Grid, Typography } from \"@material-ui/core\";\nimport { usePlayerState } from \"../contexts/PlayerProvider\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(({ palette }) => ({\n  player: {\n    height: \"45px\",\n    paddingTop: 5,\n  },\n  current: {\n    paddingTop: 5,\n    background: palette.success.main,\n  },\n}));\n\nexport default function PlayerBar({ players, currentPlayer }) {\n  const hero = usePlayerState();\n  const heroName = handleName(hero.name);\n  const villainId = Object.keys(players)\n    .filter((player) => player !== hero.playerId)\n    .reduce((x, y) => y, null);\n  const villainName = handleName(players[villainId]);\n\n  const classes = useStyles();\n  let [heroClass, villainClass] = [\"\", \"\"];\n  if (currentPlayer != null) {\n    const isHeroTurn = currentPlayer === hero.playerNumber;\n    heroClass = isHeroTurn ? classes.current : \"\";\n    villainClass = isHeroTurn ? \"\" : classes.current;\n  }\n\n  function handleName(name) {\n    if (name == null) {\n      return \" \";\n    } else if (name.length > 8) {\n      return name.substring(0, 7) + \"...\";\n    } else {\n      return name;\n    }\n  }\n\n  return (\n    <>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"center\"\n      >\n        <Grid item xs={5} sm={3}>\n          <Paper className={`${classes.player} ${heroClass}`} elevation={5}>\n            <Typography variant=\"h4\">{heroName}</Typography>\n          </Paper>\n        </Grid>\n        <Grid item xs={5} sm={3}>\n          <Paper className={`${classes.player} ${villainClass}`} elevation={5}>\n            <Typography variant=\"h4\">{villainName}</Typography>\n          </Paper>\n        </Grid>\n      </Grid>\n      <Box m={2} />\n    </>\n  );\n}\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSocket, useNewSocket } from \"../contexts/SocketProvider\";\nimport Button from \"@material-ui/core/Button\";\n\nexport default function HomeButton() {\n  const socket = useSocket();\n  const history = useHistory();\n  const newSocket = useNewSocket();\n\n  function handleHomeClick() {\n    history.push(\"/four-five-foe/\");\n    socket.disconnect();\n    newSocket();\n  }\n\n  return (\n    <Button color=\"secondary\" variant=\"contained\" onClick={handleHomeClick}>\n      Home\n    </Button>\n  );\n}\n","import React from \"react\";\nimport { Box, CircularProgress } from \"@material-ui/core\";\n\nexport default function LoadingScreen() {\n  return (\n    <>\n      <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"center\">\n        <CircularProgress />\n      </Box>\n    </>\n  );\n}\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst MODAL_STATE = {\n  intro: {\n    title: \"Welcome to Four-Five-Foe\",\n    message: `Hello everyone! This is a two-player game I used to play back in \n    secondary school. It's really similar to tic-tac-toe, but you win with \n    either an open 4, or with 5 in a row. Due to this slight variation in the \n    rules, I'm calling it Four-Five-Foe!`,\n    closingText: \"Play Now\",\n  },\n  joinFail: {\n    title: \"Join Room Failure\",\n    message: `The room you tried to join does not exists or is full.`,\n    closingText: \"Okay\",\n  },\n  anotherPlayerDisconnect: {\n    title: \"Your Opponent has disconnected\",\n    message: `The reason you're seeing this message is because your friend doesn't\n     want to play with you. `,\n    closingText: \"😢\",\n  },\n  win: {\n    title: \"Ezpz lmn sqzy!\",\n    message: `Click New Game to play again!`,\n    closingText: \"Nice\",\n  },\n  lose: {\n    title: \"Well, you win some, you lose some.\",\n    message: `Click New Game to play again!`,\n    closingText: \"😢\",\n  },\n};\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomDialogue({ isOpen, setIsOpen, type }) {\n  const handleClose = () => {\n    setIsOpen(false);\n  };\n\n  const { title, message, closingText } = MODAL_STATE[type];\n\n  return (\n    <div>\n      <Dialog\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={isOpen}\n      >\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          {title}\n        </DialogTitle>\n        <DialogContent dividers>\n          <Typography gutterBottom>{message}</Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            {closingText}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useEffect, useState, useRef } from \"react\";\nimport Node from \"./Node\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport { useSocket } from \"../contexts/SocketProvider\";\nimport {\n  usePlayerState,\n  usePlayerStateUpdate,\n} from \"../contexts/PlayerProvider\";\nimport PlayerBar from \"./PlayerBar\";\nimport HomeButton from \"./HomeButton\";\nimport { useHistory } from \"react-router-dom\";\nimport LoadingScreen from \"./LoadingScreen\";\nimport CustomDialogue from \"./CustomDialogue\";\n\nconst useStyles = makeStyles(({ palette }) => ({\n  gamegrid: {\n    overflowX: \"auto\",\n    maxHeight: \"60vh\",\n    border: 5,\n    borderColor: palette.text.secondary,\n    borderStyle: \"solid\",\n    borderRadius: 5,\n  },\n  table: {\n    width: \"100%\",\n  },\n  tableBody: {\n    position: \"relative\",\n  },\n  cell: {\n    padding: 0,\n    border: 1,\n    borderColor: \"#aaa\",\n    borderStyle: \"solid\",\n  },\n}));\n\nexport default function GameGrid() {\n  const classes = useStyles();\n  const [gameState, setGameState] = useState({});\n  const [didWin, setDidWin] = useState(false);\n  const [didLose, setDidLose] = useState(false);\n  const { gameGrid, currentPlayer, isGameOver, players } = gameState;\n  const playerState = usePlayerState();\n  const setPlayerState = usePlayerStateUpdate();\n  const renderCount = useRef(1);\n  const socket = useSocket();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (playerState.gameId === \"\") {\n      history.push(\"/four-five-foe\");\n    }\n  }, [history, playerState]);\n\n  /**\n   * Set up change in state\n   */\n  useEffect(() => {\n    if (socket == null) return;\n    socket.on(\"game_state\", (payload) => {\n      setGameState(payload);\n    });\n    socket.on(\"another_player_disconnected\", () => {\n      setPlayerState((p) => ({\n        ...p,\n        opponentDisconnected: true,\n        playerNumber: 0,\n      }));\n      history.push(\"/four-five-foe/lobby\");\n    });\n    return () => socket.off();\n  }, [socket, setPlayerState, history]);\n\n  /**\n   * Congratulate winner / notify loser\n   */\n  useEffect(() => {\n    if (!isGameOver) {\n      return;\n    }\n    if (currentPlayer === playerState.playerNumber) {\n      setDidWin(true);\n    } else {\n      setDidLose(true);\n    }\n  }, [isGameOver, currentPlayer, setDidWin, setDidLose, playerState]);\n\n  /**\n   * Render count\n   */\n  useEffect(() => {\n    renderCount.current = renderCount.current + 1;\n  });\n\n  function handleCellClick(row, col) {\n    // For immediate response\n    setGameState((gameState) => {\n      const { gameGrid, currentPlayer, lastMove, count } = gameState;\n      let nextGameGrid = [...gameGrid];\n      let nextPlayer = (currentPlayer + 1) % 2;\n      nextGameGrid[row][col] = {\n        ...gameGrid[row][col],\n        player: currentPlayer,\n        isLastMove: true,\n      };\n\n      if (lastMove != null) {\n        nextGameGrid[lastMove[0]][lastMove[1]].isLastMove = false;\n      }\n\n      return {\n        ...gameState,\n        gameGrid: nextGameGrid,\n        currentPlayer: nextPlayer,\n        lastMove: [row, col],\n        count: count + 1,\n      };\n    });\n    socket.emit(\"clickTile\", [row, col]);\n  }\n\n  function resetBoard() {\n    socket.emit(\"reset_game\");\n  }\n\n  return gameGrid == null ? (\n    <LoadingScreen />\n  ) : (\n    <Container maxWidth=\"md\">\n      <CustomDialogue isOpen={didWin} setIsOpen={setDidWin} type=\"win\" />\n      <CustomDialogue isOpen={didLose} setIsOpen={setDidLose} type=\"lose\" />\n      <PlayerBar players={players} currentPlayer={currentPlayer} />\n      <Grid container className={classes.gamegrid}>\n        <Table className={classes.table}>\n          <TableBody className={classes.tableBody}>\n            {gameGrid.map((row, rowIndex) => {\n              return (\n                <TableRow key={rowIndex}>\n                  {row.map((node, colIndex) => {\n                    const {\n                      row,\n                      col,\n                      player,\n                      isWinningCell,\n                      isLastMove,\n                    } = node;\n                    return (\n                      <TableCell\n                        key={row * 100 + col}\n                        className={classes.cell}\n                        style={{ minWidth: \"50px\" }}\n                        align=\"center\"\n                        size=\"small\"\n                      >\n                        <Node\n                          row={row}\n                          col={col}\n                          player={player}\n                          isDisabled={\n                            player !== -1 ||\n                            playerState.playerNumber !== currentPlayer ||\n                            isGameOver\n                          }\n                          isWinningCell={isWinningCell}\n                          isLastMove={isLastMove}\n                          clicked={handleCellClick}\n                        />\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </Grid>\n      <br />\n      <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"center\">\n        <Button variant=\"contained\" color=\"primary\" onClick={resetBoard}>\n          New Game\n        </Button>\n        <Box m={1} />\n        <HomeButton />\n      </Box>\n    </Container>\n  );\n}\n","import React, { useState } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst BootstrapButton = withStyles({\n  root: {\n    fontSize: 16,\n    padding: \"6px 12px\",\n    border: \"1px solid\",\n    lineHeight: 1.5,\n    backgroundColor: \"#f9a602\",\n    borderColor: \"#f9a602\",\n    \"&:hover\": {\n      backgroundColor: \"#D68E22\",\n      borderColor: \"#D68E02\",\n      boxShadow: \"none\",\n    },\n    \"&:active\": {\n      boxShadow: \"none\",\n      backgroundColor: \"#FEC34E\",\n      borderColor: \"#FEC34E\",\n    },\n  },\n})(Button);\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Instructions() {\n  const [isOpen, setIsOpen] = useState(false);\n  const handleClose = () => {\n    setIsOpen(false);\n  };\n\n  return (\n    <div>\n      <Box m={3} />\n      {!isOpen ? (\n        <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"center\">\n          <BootstrapButton\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => setIsOpen(true)}\n          >\n            Instructions\n          </BootstrapButton>\n        </Box>\n      ) : (\n        <Dialog\n          onClose={handleClose}\n          aria-labelledby=\"customized-dialog-title\"\n          open={isOpen}\n        >\n          <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n            HOW TO PLAY\n          </DialogTitle>\n          <DialogContent dividers>\n            <Typography gutterBottom>\n              It's just like tic-tac-toe but the board is much bigger and you\n              win with 5 instead of 3. This means that an \"open\" 4 would also\n              result in a win because the opponent will have no way to block\n              you!\n            </Typography>\n            <Typography gutterBottom>\n              I meant to write more for this part and include pictures but I'm\n              lazy, will get back to this if I have time after deployment.\n            </Typography>\n          </DialogContent>\n          <DialogActions>\n            <Button autoFocus onClick={handleClose} color=\"primary\">\n              READY\n            </Button>\n          </DialogActions>\n        </Dialog>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Box, Container } from \"@material-ui/core\";\nimport GameGrid from \"../components/GameGrid.js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Instructions from \"../components/Instructions\";\n\nconst useStyles = makeStyles((theme) => ({\n  indexContainer: {\n    marginLeft: \"auto\",\n    textAlign: \"center\",\n  },\n}));\n\nexport default function Game() {\n  const classes = useStyles();\n  return (\n    <div>\n      <Box className={classes.game}>\n        <Container className={classes.indexContainer} maxWidth=\"lg\">\n          <GameGrid />\n        </Container>\n      </Box>\n      <Instructions />\n    </div>\n  );\n}\n","import {\n  Button,\n  Typography,\n  TextField,\n  Box,\n  Grid,\n  Container,\n  Paper,\n  IconButton,\n} from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { useSocket } from \"../contexts/SocketProvider\";\nimport {\n  usePlayerState,\n  usePlayerStateUpdate,\n} from \"../contexts/PlayerProvider\";\nimport CustomDialogue from \"../components/CustomDialogue\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Edit } from \"@material-ui/icons\";\nimport LoadingScreen from \"../components/LoadingScreen\";\nimport Instructions from \"../components/Instructions\";\n\nexport default function Home() {\n  const history = useHistory();\n  const socket = useSocket();\n  const setPlayerState = usePlayerStateUpdate();\n  const playerState = usePlayerState();\n  const [isJoinFail, setIsJoinFail] = useState(false);\n  const [isIntroOpen, setIsIntroOpen] = useState(true);\n  const hasSetName = playerState.name !== \"\";\n\n  useEffect(() => {\n    if (socket == null) return;\n    if (hasSetName) {\n      setIsIntroOpen(false);\n      socket.emit(\"set_name\", playerState.name);\n    }\n\n    socket.on(\"set_player_id\", (payload) => {\n      setPlayerState((playerState) => ({ ...playerState, playerId: payload }));\n    });\n\n    socket.on(\"joined_room\", (payload) => {\n      setPlayerState((playerState) => ({ ...playerState, gameId: payload }));\n      history.push(\"/four-five-foe/lobby\");\n    });\n\n    socket.on(\"join_room_failure\", () => {\n      setIsJoinFail(true);\n    });\n    return () => socket.off();\n  }, [socket, hasSetName, setPlayerState, playerState, history]);\n\n  return socket == null ? (\n    <LoadingScreen />\n  ) : (\n    <Container maxWidth=\"md\">\n      <CustomDialogue\n        isOpen={isIntroOpen}\n        setIsOpen={setIsIntroOpen}\n        type=\"intro\"\n      />\n      <CustomDialogue\n        isOpen={isJoinFail}\n        setIsOpen={setIsJoinFail}\n        type=\"joinFail\"\n      />\n\n      <NameScreen hasSetName={hasSetName} />\n      {hasSetName ? <GameOptions /> : \"\"}\n      <Instructions />\n    </Container>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  gameTypePaper: {\n    minHeight: 170,\n    padding: 20,\n    \"&:hover\": {\n      backgroundColor: theme.palette.action.hover,\n      boxShadow: `3px 4px ${theme.palette.background.default};`,\n    },\n  },\n}));\n\nfunction GameOptions() {\n  const socket = useSocket();\n  const setPlayerState = usePlayerStateUpdate();\n  const gameIdRef = useRef();\n  const classes = useStyles();\n\n  function newGame() {\n    setPlayerState((playerState) => ({\n      ...playerState,\n      playerNumber: 0,\n    }));\n    socket.emit(\"create_room\");\n  }\n\n  function joinGame() {\n    setPlayerState((playerState) => ({\n      ...playerState,\n      playerNumber: 1,\n    }));\n    socket.emit(\"join_room\", gameIdRef.current.value);\n  }\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={6}>\n        <Paper className={classes.gameTypePaper} elevation={5}>\n          <Typography variant=\"h4\">Create a new game</Typography>\n          <Box m={3} />\n          <Typography>\n            Click on this to create a new game and invite a friend to join you!\n          </Typography>\n          <Box m={3} />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth\n            onClick={newGame}\n          >\n            New Game\n          </Button>\n        </Paper>\n      </Grid>\n\n      <Grid item xs={6}>\n        <Paper className={classes.gameTypePaper} elevation={5}>\n          <Typography variant=\"h4\">Join a game</Typography>\n          <Box m={3} />\n          <TextField\n            inputRef={gameIdRef}\n            label=\"Game id\"\n            variant=\"outlined\"\n            color=\"secondary\"\n            size=\"small\"\n            fullWidth\n            style={{ marginRight: 10 }}\n          />\n          <Box m={3} />\n          <Button\n            fullWidth\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={joinGame}\n          >\n            Join Game\n          </Button>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}\n\nfunction NameScreen({ hasSetName }) {\n  const socket = useSocket();\n  const playerState = usePlayerState();\n  const setPlayerState = usePlayerStateUpdate();\n  const nameRef = useRef();\n\n  function setName() {\n    if (nameRef.current.value === \"\") {\n      alert(\"Please, I want to know your name\");\n      return;\n    }\n    socket.emit(\"set_name\", nameRef.current.value);\n    setPlayerState((playerState) => ({\n      ...playerState,\n      name: nameRef.current.value,\n    }));\n  }\n\n  function resetName() {\n    socket.emit(\"set_name\", \"\");\n    setPlayerState((playerState) => ({\n      ...playerState,\n      name: \"\",\n    }));\n  }\n\n  return (\n    <>\n      {!hasSetName ? (\n        <>\n          <Typography variant=\"h3\" color=\"textPrimary\">\n            Hello, what's your name?\n          </Typography>\n          <Box m={3} />\n          <TextField\n            xs={4}\n            inputRef={nameRef}\n            label=\"Name\"\n            variant=\"outlined\"\n            size=\"small\"\n            style={{ marginRight: 10, minWidth: \"50%\" }}\n          />\n          <Button variant=\"contained\" color=\"primary\" onClick={setName}>\n            Set Name\n          </Button>\n        </>\n      ) : (\n        <Box display=\"flex\" flexDirection=\"row\">\n          <Typography variant=\"h3\" color=\"textPrimary\">\n            Hello, {playerState.name}\n          </Typography>\n          <Box>\n            <IconButton size=\"small\" onClick={resetName}>\n              <Edit />\n            </IconButton>\n          </Box>\n        </Box>\n      )}\n      <Box m={3} />\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Button, Box, Container, Grid, Typography } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  usePlayerState,\n  usePlayerStateUpdate,\n} from \"../contexts/PlayerProvider\";\nimport { useSocket } from \"../contexts/SocketProvider\";\nimport PlayerBar from \"../components/PlayerBar\";\nimport HomeButton from \"../components/HomeButton\";\nimport CustomDialogue from \"../components/CustomDialogue\";\nimport Instructions from \"../components/Instructions\";\n\nconst TEXT = {\n  waiting: {\n    title: \"Waiting for Player 2...\",\n    details: \"Get a friend to join this room!\",\n  },\n  ready: {\n    title: \"We're all set!...\",\n    details: \"Let's get this party started!\",\n  },\n};\n\nfunction Prompt({ state }) {\n  const text = TEXT[state];\n  return (\n    <>\n      <Typography variant=\"h6\" color=\"textPrimary\">\n        {text.title}\n      </Typography>\n      <Typography color=\"textPrimary\">{text.details}</Typography>\n    </>\n  );\n}\n\nexport default function Lobby() {\n  const history = useHistory();\n  const socket = useSocket();\n  const [isReady, setIsReady] = useState(false);\n  const [players, setPlayers] = useState();\n  const { name, gameId } = usePlayerState();\n  const playerState = usePlayerState();\n  const setPlayerState = usePlayerStateUpdate();\n\n  useEffect(() => {\n    if (playerState.gameId === \"\") {\n      history.push(\"/four-five-foe\");\n    }\n  }, [history, playerState]);\n\n  useEffect(() => {\n    if (socket == null) return;\n    socket.on(\"game_started\", () => {\n      history.push(\"/four-five-foe/game\");\n    });\n    socket.on(\"game_state\", (payload) => {\n      const { players } = payload;\n      setPlayers((oldPlayers) => {\n        if (Object.keys(players).length === 2) {\n          setIsReady(true);\n        } else {\n          setIsReady(false);\n        }\n        return players;\n      });\n    });\n    socket.on(\"another_player_disconnected\", () => {\n      setPlayerState((playerState) => ({ ...playerState, playerNumber: 0 }));\n    });\n    return () => socket.off();\n  }, [socket, history, setIsReady, setPlayerState, setPlayers]);\n\n  function startGame() {\n    socket.emit(\"start_game\");\n  }\n\n  return (\n    <Container maxWidth=\"md\">\n      <CustomDialogue\n        isOpen={playerState.opponentDisconnected}\n        setIsOpen={() =>\n          setPlayerState((p) => ({\n            ...p,\n            opponentDisconnected: !p.opponentDisconnected,\n          }))\n        }\n        type=\"anotherPlayerDisconnect\"\n      />\n      <Grid container direction=\"column\" justify=\"center\" align=\"center\">\n        <Grid item>\n          {players == null ? \"\" : <PlayerBar players={players} />}\n        </Grid>\n        <Grid item>\n          <Typography variant=\"h3\" color=\"textPrimary\">\n            Hi {`${name}`}!\n          </Typography>\n          <Box m={1} />\n\n          <Prompt state={isReady ? \"ready\" : \"waiting\"} />\n\n          <Box m={1} />\n          <Typography variant=\"h5\" color=\"textPrimary\">\n            Game ID: <strong>{`${gameId}`}</strong>\n          </Typography>\n        </Grid>\n\n        <Grid item>\n          <Box m={3}></Box>\n        </Grid>\n        <Grid item>\n          <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"center\">\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={!isReady}\n              onClick={startGame}\n            >\n              {isReady ? \"Start Game\" : \"Waiting for player 2\"}\n            </Button>\n            <Box m={1} />\n            <HomeButton />\n          </Box>\n        </Grid>\n      </Grid>\n      <Instructions />\n    </Container>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nconst CustomThemeContext = React.createContext();\nconst CustomThemeUpdateContext = React.createContext();\n\nexport function useDarkMode() {\n  return useContext(CustomThemeContext);\n}\n\nexport function useSetDarkMode() {\n  return useContext(CustomThemeUpdateContext);\n}\n\nexport function CustomThemeProvider({ children }) {\n  const [isDark, setDarkMode] = useState(true);\n\n  const main = isDark ? \"dark\" : \"light\";\n\n  const theme = createMuiTheme({\n    palette: {\n      type: main,\n    },\n  });\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CustomThemeContext.Provider value={isDark}>\n        <CustomThemeUpdateContext.Provider value={setDarkMode}>\n          {children}\n        </CustomThemeUpdateContext.Provider>\n      </CustomThemeContext.Provider>\n    </ThemeProvider>\n  );\n}\n","import React from \"react\";\nimport { useSetDarkMode, useDarkMode } from \"../contexts/CustomThemeProvider\";\nimport { FormControlLabel, Switch, Box, Container } from \"@material-ui/core\";\n\nexport default function DarkThemeSwitch() {\n  const setDarkMode = useSetDarkMode();\n  const isDarkMode = useDarkMode();\n  const modeLabel = isDarkMode ? \"🌙\" : \"☀️\";\n  return (\n    <Container maxWidth=\"md\">\n      <Box display=\"flex\" justifyContent=\"flex-end\" paddingBottom={2}>\n        <FormControlLabel\n          label={modeLabel}\n          labelPlacement=\"start\"\n          control={\n            <Switch\n              checked={isDarkMode}\n              onChange={() => setDarkMode((isDark) => !isDark)}\n            />\n          }\n        />\n      </Box>\n    </Container>\n  );\n}\n","import Game from \"./container/Game.js\";\nimport Home from \"./container/Home.js\";\nimport Lobby from \"./container/Lobby.js\";\nimport { SocketProvider } from \"./contexts/SocketProvider.js\";\nimport { PlayerProvider } from \"./contexts/PlayerProvider.js\";\nimport { CustomThemeProvider } from \"./contexts/CustomThemeProvider\";\nimport DarkThemeSwitch from \"./components/DarkThemeSwitch\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Box } from \"@material-ui/core\";\n\nconst useStyle = makeStyles({ main: { minHeight: \"95vh\" } });\n\nfunction App() {\n  const classes = useStyle();\n  return (\n    <CustomThemeProvider>\n      <SocketProvider>\n        <PlayerProvider>\n          <Box\n            bgcolor=\"background.default\"\n            paddingTop=\"5vh\"\n            className={classes.main}\n          >\n            <DarkThemeSwitch />\n            <Router>\n              <Route path=\"/four-five-foe/\" exact component={Home} />\n              <Route path=\"/four-five-foe/lobby\" component={Lobby} />\n              <Route path=\"/four-five-foe/game\" component={Game} />\n            </Router>\n            {/* </Paper> */}\n          </Box>\n        </PlayerProvider>\n      </SocketProvider>\n    </CustomThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}